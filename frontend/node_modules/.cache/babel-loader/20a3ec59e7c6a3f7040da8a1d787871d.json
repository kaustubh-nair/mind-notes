{"ast":null,"code":"import _slicedToArray from \"/home/kau/projects/acad/spe/mind-note-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kau/projects/acad/spe/mind-note-frontend/src/components/allbooks.component.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nfunction App() {\n  let forceUpdate = useForceUpdate();\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, count++, \" times clicked\"), React.createElement(\"button\", {\n    onClick: forceUpdate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Refresh\"));\n}\n\nexport default AllBooks;","map":{"version":3,"sources":["/home/kau/projects/acad/spe/mind-note-frontend/src/components/allbooks.component.js"],"names":["React","useState","ReactDOM","useForceUpdate","value","setState","count","App","forceUpdate","AllBooks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,SAASC,cAAT,GAA0B;AAAA,kBACAF,QAAQ,CAAC,IAAD,CADR;AAAA;AAAA,MACnBG,KADmB;AAAA,MACZC,QADY;;AAExB,SAAO,MAAMA,QAAQ,CAAC,CAACD,KAAF,CAArB;AACD;;AAED,IAAIE,KAAK,GAAG,CAAZ;;AAEA,SAASC,GAAT,GAAe;AACb,MAAIC,WAAW,GAAGL,cAAc,EAAhC;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,KAAK,EAAV,mBADF,EAGE;AAAQ,IAAA,OAAO,EAAEE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHF,CADF;AAOD;;AAED,eAAeC,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nfunction useForceUpdate() {\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet count = 0;\n\nfunction App() {\n  let forceUpdate = useForceUpdate();\n\n  return (\n    <div>\n      <h1>{count++} times clicked</h1>\n\n      <button onClick={forceUpdate}>Refresh</button>\n    </div>\n  );\n}\n\nexport default AllBooks;\n"]},"metadata":{},"sourceType":"module"}