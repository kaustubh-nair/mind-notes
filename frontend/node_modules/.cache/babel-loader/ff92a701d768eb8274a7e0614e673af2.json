{"ast":null,"code":"import _defineProperty from \"/home/kau/projects/acad/spe/mind-note-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/kau/projects/acad/spe/mind-note-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/kau/projects/acad/spe/mind-note-frontend/src/components/book.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport { variables } from \"../urls.js\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nlet renderedBooks = \"\";\nconst noteStyle = {\n  position: \"absolute\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\"\n};\nconst noteContainerStyle = {\n  position: \"relative\",\n  //overflow: \"auto\",\n  width: \"100%\",\n  height: \"100%\",\n  background: \"white\",\n  color: \"black\",\n  border: \"black solid 1px\"\n};\nconst canvasStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  background: \"white\",\n  border: \"none\",\n  //overflow: \"auto\",\n  display: \"flex\"\n};\n\nconst Book = ({\n  getToken\n}) => {\n  let query = useQuery();\n\n  const _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastPoint = _useState4[0],\n        setLastPoint = _useState4[1];\n\n  const forceUpdate = useForceUpdate();\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notes = _useState6[0],\n        setNotes = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        lines = _useState8[0],\n        setLines = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        dragging = _useState10[0],\n        setDragging = _useState10[1];\n\n  const openNote = e => {\n    prompt('Please enter your name', 'Poppy');\n  };\n\n  const onStop = (e, ui) => {\n    setDragging(false);\n    const d = dragging;\n    const noteId = ui.node.id;\n    const i = notes.findIndex(note => note.id == noteId);\n    const newX = notes[i].x + e.clientX - lastPoint.x,\n          newY = notes[i].y + e.clientY - lastPoint.y;\n    console.debug(newX, newY);\n    console.debug(notes[i].x, notes[i].y);\n\n    if (d) {\n      updatePosition(newX, newY, noteId);\n    } else {\n      openNote();\n    } //forceUpdate();\n\n  };\n\n  const onStart = e => {\n    setLastPoint({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onDrag = e => {\n    setDragging(true);\n    forceUpdate();\n  };\n\n  const fetchLines = async () => {\n    const url = variables.serverUrl + variables.fetchLinesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    var l = Object.values(response.data);\n\n    for (var i = 0; i < l.length; i++) {\n      l[i].start = String(l[i].start);\n      l[i].end = String(l[i].end);\n    }\n\n    setLines(l);\n  };\n\n  const fetchBook = async () => {\n    console.log(bookId);\n    const url = variables.serverUrl + variables.fetchNotesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setNotes(Object.values(response.data));\n    console.log(Object.values(response.data));\n  };\n\n  const addNote = () => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = getToken();\n    const res = axios.post(url, {\n      book_id: bookId,\n      name: 'lksdjf',\n      content: '',\n      x: 50,\n      y: 50,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    fetchBook();\n  };\n\n  const updatePosition = (x, y, noteId) => {\n    const url = variables.serverUrl + variables.patchNoteEndpoint;\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: noteId,\n      x: x,\n      y: y\n    });\n  };\n\n  useEffect(() => {\n    fetchBook();\n    fetchLines();\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, \" Add note\"), React.createElement(\"div\", {\n    style: canvasStyle,\n    id: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: noteContainerStyle,\n    id: \"noteContainerConatinerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: noteContainerStyle,\n    id: \"noteContainerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, notes.map((note, i) => React.createElement(Draggable, {\n    onStart: onStart,\n    onStop: onStop,\n    onDrag: onDrag,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: note.id,\n    style: _objectSpread({}, noteStyle, {\n      left: note.x,\n      top: note.y\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, note.title))), lines.map((line, i) => React.createElement(Xarrow, Object.assign({\n    key: i\n  }, line, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }));\n};\n\nexport default Book;","map":{"version":3,"sources":["/home/kau/projects/acad/spe/mind-note-frontend/src/components/book.component.js"],"names":["React","useState","useRef","useEffect","Xarrow","axios","Draggable","variables","useForceUpdate","value","setState","renderedBooks","noteStyle","position","border","borderRadius","textAlign","width","height","noteContainerStyle","background","color","canvasStyle","display","Book","getToken","query","useQuery","x","y","lastPoint","setLastPoint","forceUpdate","notes","setNotes","lines","setLines","dragging","setDragging","openNote","e","prompt","onStop","ui","d","noteId","node","id","i","findIndex","note","newX","clientX","newY","clientY","console","debug","updatePosition","onStart","onDrag","fetchLines","url","serverUrl","fetchLinesEndpoint","token","response","get","headers","Authorization","access","crossDomain","params","book_id","bookId","l","Object","values","data","length","start","String","end","fetchBook","log","fetchNotesEndpoint","addNote","postNoteEndpoint","res","post","name","content","parent_id","patchNoteEndpoint","patch","note_id","map","left","top","title","line"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport {variables} from \"../urls.js\";\n\nfunction useForceUpdate(){\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet renderedBooks = \"\";\nconst noteStyle = {\n  position: \"absolute\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\",\n};\n\n\nconst noteContainerStyle = {\n  position: \"relative\",\n  //overflow: \"auto\",\n  width: \"100%\",\n  height: \"100%\",\n  background: \"white\",\n  color: \"black\",\n  border: \"black solid 1px\",\n};\nconst canvasStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  background: \"white\",\n  border: \"none\",\n  //overflow: \"auto\",\n  display: \"flex\",\n};\n\nconst Book = ({getToken}) => {\n    let query = useQuery();\n    const [lastPoint, setLastPoint] = useState({ x: 0, y: 0 });\n    const forceUpdate = useForceUpdate();\n\n    const [notes, setNotes] = useState([]);\n    const [lines, setLines] = useState([]);\n    const [dragging, setDragging] = useState(false);\n\n    const openNote = (e) => {\n        prompt('Please enter your name','Poppy');\n    }\n\n    const onStop = (e, ui) => {\n        setDragging(false);\n\n        const d = dragging;\n        const noteId = ui.node.id;\n        const i = notes.findIndex((note) => note.id == noteId);\n        const newX = notes[i].x + e.clientX - lastPoint.x,\n            newY = notes[i].y + e.clientY - lastPoint.y;\n        console.debug(newX, newY);\n        console.debug(notes[i].x, notes[i].y);\n        if (d) {\n            updatePosition(newX, newY, noteId);\n        }\n        else {\n            openNote();\n        }\n        //forceUpdate();\n    }\n\n    const onStart = (e) => {\n        setLastPoint({ x: e.clientX, y: e.clientY })\n    }\n\n    const onDrag = (e) => {\n        setDragging(true);\n        forceUpdate();\n    }\n\n    const fetchLines = async () => {\n        const url = variables.serverUrl + variables.fetchLinesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        var l = Object.values(response.data)\n        for (var i = 0; i < l.length; i++) {\n            l[i].start = String(l[i].start);\n            l[i].end = String(l[i].end);\n        }\n        setLines(l);\n    }\n\n    const fetchBook = async () => {\n      console.log(bookId);\n        const url = variables.serverUrl + variables.fetchNotesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setNotes(Object.values(response.data));\n        console.log(Object.values(response.data));\n    }\n\n    const addNote = () => {\n        const url = variables.serverUrl + variables.postNoteEndpoint;\n        const token = getToken();\n        const res = axios.post(url, {\n            book_id: bookId,\n            name: 'lksdjf',\n            content: '',\n            x: 50,\n            y: 50,\n            parent_id: 1,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        fetchBook();\n    }\n\n    const updatePosition = (x, y, noteId) => {\n        const url = variables.serverUrl + variables.patchNoteEndpoint;\n        const res = axios.patch(url, {\n            book_id: bookId,\n            note_id: noteId,\n            x: x,\n            y: y,\n        });\n    }\n\n    useEffect(() => {\n      fetchBook();\n      fetchLines();\n\t}, []);\n\n  return (\n    <React.Fragment>\n      <button onClick={addNote}> Add note</button>\n      <div style={canvasStyle} id=\"canvas\" >\n        <div style={noteContainerStyle} id=\"noteContainerConatinerStyle\">\n          <div style={noteContainerStyle} id=\"noteContainerStyle\">\n            {notes.map((note, i) => (\n              <Draggable onStart={onStart} onStop={onStop} onDrag={onDrag} key={i}>\n                <div\n                  id={note.id}\n                  style={{ ...noteStyle, left: note.x, top: note.y }}\n                >\n                  {note.title}\n                </div>\n              </Draggable>\n            ))}\n            {lines.map((line, i) => (\n              <Xarrow key={i} {...line} />\n            ))}\n          </div>\n        </div>\n      </div>\n      <br />\n    </React.Fragment>\n  );\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}