{"ast":null,"code":"import _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/login.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { variables } from \"../urls.js\";\n\nasync function loginUser(credentials) {\n  return fetch(variables.serverUrl + variables.loginEndpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login(props, {\n  setToken\n}) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const location = useLocation();\n\n  const setMessages = () => {\n    if ('state' in location) {\n      if (location.state) setMessage(React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"location.state.message\"));\n    } else {\n      setMessage(\"\");\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await loginUser({\n      username,\n      password\n    });\n\n    if ('access' in response) {\n      setToken({\n        'access': response['access'],\n        'refresh': response['refresh']\n      });\n      props.history.push({\n        pathname: '/home'\n      });\n    }\n  };\n\n  useEffect(() => {\n    setMessages();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Log in\"), message, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    onChange: e => setUserName(e.target.value),\n    type: \"username\",\n    className: \"form-control\",\n    placeholder: \"Enter username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Enter password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-dark btn-lg btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"p\", {\n    className: \"forgot-password text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Forgot \", React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"password?\"))));\n}","map":{"version":3,"sources":["/app/frontend/src/components/login.component.js"],"names":["React","useState","useEffect","Redirect","useLocation","variables","loginUser","credentials","fetch","serverUrl","loginEndpoint","method","headers","body","JSON","stringify","then","data","json","Login","props","setToken","username","setUserName","password","setPassword","message","setMessage","location","setMessages","state","handleSubmit","e","preventDefault","response","history","push","pathname","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport {variables} from \"../urls.js\";\n\nasync function loginUser(credentials) {\n return fetch(variables.serverUrl + variables.loginEndpoint, {\n   method: 'POST',\n   headers: {\n     'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(credentials)\n })\n   .then(data => data.json())\n}\n\n\n\nexport default function Login(props, {setToken}) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n    const [message, setMessage] = useState(\"\");\n    const location = useLocation();\n\n    const setMessages = () => {\n      if ('state' in location) {\n        if (location.state)\n          setMessage(\n                  <div className=\"alert alert-success\">\nlocation.state.message\n                  </div>\n          );\n      }\n      else {\n        setMessage(\"\");\n      }\n    }\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const response = await loginUser({\n          username,\n          password\n        });\n        if ('access' in response)\n        {\n            setToken({'access': response['access'], 'refresh': response['refresh']});\n            props.history.push({\n             pathname: '/home',\n           });\n        }\n      }\n\n      useEffect(() => {\n        setMessages();\n      }, []);\n\n        return (\n            <div className=\"inner\">\n            <form onSubmit={handleSubmit}>\n\n                <h3>Log in</h3>\n                  {message}\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input onChange={e => setUserName(e.target.value)} type=\"username\" className=\"form-control\" placeholder=\"Enter username\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input onChange={e => setPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Sign in</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n            </div>\n        );\n}\n"]},"metadata":{},"sourceType":"module"}