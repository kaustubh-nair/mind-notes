{"ast":null,"code":"import _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/feed.component.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link } from \"react-router-dom\";\nimport { variables } from \"../urls.js\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nlet renderedFeed = \"\";\n\nfunction Feed(props) {\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        feed = _useState4[0],\n        setFeed = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        tags = _useState6[0],\n        setTags = _useState6[1];\n\n  const forceUpdate = useForceUpdate();\n\n  const addNewComment = async (e, data) => {\n    e.preventDefault();\n    const commentContent = e.target[0].value;\n    const bookId = e.target.id;\n    const url = variables.serverUrl + variables.postCommentEndpoint;\n    const token = props.getToken();\n    const res = axios.post(url, {\n      content: commentContent,\n      book_id: bookId,\n      user_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    e.target.reset();\n    fetchFeed();\n  };\n\n  const likeBook = async () => {};\n\n  const fetchTags = async () => {\n    const url = variables.serverUrl + variables.fetchTagsEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        user_id: '1'\n      }\n    });\n    setTags(response.data);\n  };\n\n  const fetchFeed = async () => {\n    const url = variables.serverUrl + variables.fetchFeedEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        user_id: '1'\n      }\n    });\n    setFeed(response.data);\n  };\n\n  useEffect(() => {\n    fetchFeed();\n    fetchTags();\n  }, []);\n  useEffect(() => {\n    renderFeed();\n  }, [feed]);\n\n  function getTagCards(tags) {\n    var t = [];\n\n    for (var i in tags) {\n      t.push(React.createElement(\"div\", {\n        className: \"pill\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, tags[i].name));\n    }\n\n    return t;\n  }\n\n  function bookmatchesTag(book) {\n    console.log(tag_filter);\n    if (tag_filter == \"\") return true;\n\n    for (var i in book.tags) {\n      if (tag_filter == book.tags[i].name) return true;\n    }\n\n    return false;\n  }\n\n  function renderFeed() {\n    if (feed) {\n      renderedFeed = [];\n\n      for (var i = 0; i < feed.length; i++) {\n        if (bookmatchesTag(feed[i])) {\n          renderedFeed.push(React.createElement(\"div\", {\n            className: \"feed-card \",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"book row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"profile-picture\",\n            src: require('../static/pf.png'),\n            alt: \"profile picture\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"username\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, feed[i].user.first_name), React.createElement(\"div\", {\n            className: \"timestamp\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, feed[i].time_ago)), React.createElement(\"div\", {\n            className: \"column\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(Link, {\n            className: \"title\",\n            to: \"/book/\" + feed[i].id + \"/notes\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(\"h4\", {\n            id: feed[i].id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, feed[i].title))), React.createElement(\"div\", {\n            className: \"description\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109\n            },\n            __self: this\n          }, feed[i].description)), React.createElement(\"div\", {\n            className: \"column-right\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"feed-card-tags\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115\n            },\n            __self: this\n          }, getTagCards(feed[i].tags)))), React.createElement(\"div\", {\n            className: \"comments\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, feed[i].comments.map(comment => React.createElement(\"div\", {\n            className: \"comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 125\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"profile-picture\",\n            src: require('../static/pf.png'),\n            alt: \"profile picture\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"username\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, comment.user.first_name), React.createElement(\"div\", {\n            className: \"timestamp\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, comment.time_ago)), React.createElement(\"div\", {\n            className: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, comment.content)))), React.createElement(\"div\", {\n            className: \"container\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"row\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"column-sm new-comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"form\", {\n            onSubmit: addNewComment,\n            id: feed[i].id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            placeholder: \"Add new comment\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          })))))));\n        }\n      }\n\n      forceUpdate();\n    } else {\n      renderedFeed = \"\";\n    }\n  }\n\n  const sortByTag = e => {\n    const tag = e.target.value;\n\n    if (tag == \"Sort by tag\") {\n      tag_filter = \"\";\n    } else {\n      tag_filter = tag;\n    }\n\n    renderFeed();\n  };\n\n  function getTags() {\n    var tagnames = [];\n\n    for (var i in tags) {\n      tagnames.push(React.createElement(\"option\", {\n        value: tags[i].name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, tags[i].name));\n    }\n\n    return tagnames;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"feed\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    onChange: sortByTag,\n    name: \"pets\",\n    id: \"pet-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, \"Sort by tag\"), getTags()), renderedFeed));\n}\n\nexport default Feed;","map":{"version":3,"sources":["/app/frontend/src/components/feed.component.js"],"names":["React","useState","useEffect","axios","Redirect","Link","variables","useForceUpdate","value","setState","renderedFeed","Feed","props","feed","setFeed","tags","setTags","forceUpdate","addNewComment","e","data","preventDefault","commentContent","target","bookId","id","url","serverUrl","postCommentEndpoint","token","getToken","res","post","content","book_id","user_id","headers","Authorization","access","crossDomain","reset","fetchFeed","likeBook","fetchTags","fetchTagsEndpoint","response","get","params","fetchFeedEndpoint","renderFeed","getTagCards","t","i","push","name","bookmatchesTag","book","console","log","tag_filter","length","require","user","first_name","time_ago","title","description","comments","map","comment","sortByTag","tag","getTags","tagnames"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA8B,kBAA9B;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEA,SAASC,cAAT,GAAyB;AAAA,kBACCN,QAAQ,CAAC,IAAD,CADT;AAAA;AAAA,MAClBO,KADkB;AAAA,MACXC,QADW;;AAEvB,SAAO,MAAMA,QAAQ,CAAC,CAACD,KAAF,CAArB;AACD;;AAED,IAAIE,YAAY,GAAG,EAAnB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA,qBACKX,QAAQ,CAAC,IAAD,CADb;AAAA;AAAA,QACZY,IADY;AAAA,QACNC,OADM;;AAAA,qBAEKb,QAAQ,CAAC,IAAD,CAFb;AAAA;AAAA,QAEZc,IAFY;AAAA,QAENC,OAFM;;AAGnB,QAAMC,WAAW,GAAGV,cAAc,EAAlC;;AAEA,QAAMW,aAAa,GAAG,OAAOC,CAAP,EAAUC,IAAV,KAAmB;AACvCD,IAAAA,CAAC,CAACE,cAAF;AACA,UAAMC,cAAc,GAAGH,CAAC,CAACI,MAAF,CAAS,CAAT,EAAYf,KAAnC;AACA,UAAMgB,MAAM,GAAGL,CAAC,CAACI,MAAF,CAASE,EAAxB;AAEA,UAAMC,GAAG,GAAGpB,SAAS,CAACqB,SAAV,GAAsBrB,SAAS,CAACsB,mBAA5C;AACA,UAAMC,KAAK,GAAGjB,KAAK,CAACkB,QAAN,EAAd;AACA,UAAMC,GAAG,GAAG5B,KAAK,CAAC6B,IAAN,CAAWN,GAAX,EAAgB;AACxBO,MAAAA,OAAO,EAAEX,cADe;AAExBY,MAAAA,OAAO,EAAEV,MAFe;AAGxBW,MAAAA,OAAO,EAAE;AAHe,KAAhB,EAIT;AAAEC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYR,KAAK,CAACS;AAAnC,OAAX;AAAwDC,MAAAA,WAAW,EAAE;AAArE,KAJS,CAAZ;AAMApB,IAAAA,CAAC,CAACI,MAAF,CAASiB,KAAT;AACAC,IAAAA,SAAS;AACV,GAfD;;AAiBA,QAAMC,QAAQ,GAAG,YAAY,CAC5B,CADD;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC5B,UAAMjB,GAAG,GAAGpB,SAAS,CAACqB,SAAV,GAAsBrB,SAAS,CAACsC,iBAA5C;AACA,UAAMf,KAAK,GAAGjB,KAAK,CAACkB,QAAN,EAAd;AACA,UAAMe,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAN,CAAUpB,GAAV,EAAe;AAAEU,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYR,KAAK,CAACS;AAAnC,OAAX;AAAwDC,MAAAA,WAAW,EAAE,KAArE;AAA4EQ,MAAAA,MAAM,EAAE;AAACZ,QAAAA,OAAO,EAAE;AAAV;AAApF,KAAf,CAAvB;AACAnB,IAAAA,OAAO,CAAC6B,QAAQ,CAACzB,IAAV,CAAP;AACD,GALD;;AAMA,QAAMqB,SAAS,GAAG,YAAY;AAC5B,UAAMf,GAAG,GAAGpB,SAAS,CAACqB,SAAV,GAAsBrB,SAAS,CAAC0C,iBAA5C;AACA,UAAMnB,KAAK,GAAGjB,KAAK,CAACkB,QAAN,EAAd;AACA,UAAMe,QAAQ,GAAG,MAAM1C,KAAK,CAAC2C,GAAN,CAAUpB,GAAV,EAAe;AAAEU,MAAAA,OAAO,EAAE;AAAEC,QAAAA,aAAa,EAAE,YAAYR,KAAK,CAACS;AAAnC,OAAX;AAAwDC,MAAAA,WAAW,EAAE,KAArE;AAA4EQ,MAAAA,MAAM,EAAE;AAACZ,QAAAA,OAAO,EAAE;AAAV;AAApF,KAAf,CAAvB;AACArB,IAAAA,OAAO,CAAC+B,QAAQ,CAACzB,IAAV,CAAP;AACD,GALD;;AAQAlB,EAAAA,SAAS,CAAC,MAAM;AACduC,IAAAA,SAAS;AACTE,IAAAA,SAAS;AACX,GAHS,EAGP,EAHO,CAAT;AAKAzC,EAAAA,SAAS,CAAC,MAAM;AACd+C,IAAAA,UAAU;AACZ,GAFS,EAEP,CAACpC,IAAD,CAFO,CAAT;;AAIA,WAASqC,WAAT,CAAqBnC,IAArB,EAA2B;AACzB,QAAIoC,CAAC,GAAG,EAAR;;AACA,SAAK,IAAIC,CAAT,IAAcrC,IAAd,EAAoB;AAClBoC,MAAAA,CAAC,CAACE,IAAF,CACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGtC,IAAI,CAACqC,CAAD,CAAJ,CAAQE,IADX,CADF;AAKD;;AACD,WAAOH,CAAP;AACD;;AAED,WAASI,cAAT,CAAwBC,IAAxB,EAA8B;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AACA,QAAIA,UAAU,IAAI,EAAlB,EACE,OAAO,IAAP;;AACF,SAAI,IAAIP,CAAR,IAAaI,IAAI,CAACzC,IAAlB,EACA;AACE,UAAI4C,UAAU,IAAIH,IAAI,CAACzC,IAAL,CAAUqC,CAAV,EAAaE,IAA/B,EACE,OAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACD;;AACD,WAASL,UAAT,GAAsB;AACpB,QAAIpC,IAAJ,EAAU;AACRH,MAAAA,YAAY,GAAG,EAAf;;AACA,WAAI,IAAI0C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGvC,IAAI,CAAC+C,MAAxB,EAAgCR,CAAC,EAAjC,EAAqC;AACnC,YAAIG,cAAc,CAAC1C,IAAI,CAACuC,CAAD,CAAL,CAAlB,EAA6B;AAC7B1C,UAAAA,YAAY,CAAC2C,IAAb,CACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACC;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAiC,YAAA,GAAG,EAAEQ,OAAO,CAAC,kBAAD,CAA7C;AAAmE,YAAA,GAAG,EAAC,iBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGhD,IAAI,CAACuC,CAAD,CAAJ,CAAQU,IAAR,CAAaC,UADhB,CAFF,EAKE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGlD,IAAI,CAACuC,CAAD,CAAJ,CAAQY,QADX,CALF,CADF,EAUE;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,SAAS,EAAC,OAAhB;AAAwB,YAAA,EAAE,EAAE,WAAWnD,IAAI,CAACuC,CAAD,CAAJ,CAAQ3B,EAAnB,GAAwB,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAI,YAAA,EAAE,EAAEZ,IAAI,CAACuC,CAAD,CAAJ,CAAQ3B,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKZ,IAAI,CAACuC,CAAD,CAAJ,CAAQa,KADb,CADF,CADJ,CADJ,EASI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGpD,IAAI,CAACuC,CAAD,CAAJ,CAAQc,WADX,CATJ,CAVF,EAwBE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKhB,WAAW,CAACrC,IAAI,CAACuC,CAAD,CAAJ,CAAQrC,IAAT,CADhB,CADF,CAxBF,CADA,EAgCF;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACSF,IAAI,CAACuC,CAAD,CAAJ,CAAQe,QAAR,CAAiBC,GAAjB,CACCC,OAAO,IACL;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAiC,YAAA,GAAG,EAAER,OAAO,CAAC,kBAAD,CAA7C;AAAmE,YAAA,GAAG,EAAC,iBAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,EAEI;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA2BQ,OAAO,CAACP,IAAR,CAAaC,UAAxC,CAFJ,EAGI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4BM,OAAO,CAACL,QAApC,CAHJ,CADA,EAME;AAAK,YAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAmBK,OAAO,CAACpC,OAA3B,CANF,CAFH,CADT,CAhCE,EA8CA;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACA;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAK,YAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAM,YAAA,QAAQ,EAAEf,aAAhB;AAA+B,YAAA,EAAE,EAAEL,IAAI,CAACuC,CAAD,CAAJ,CAAQ3B,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAO,YAAA,WAAW,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADJ,CADA,CA9CA,CADF;AA4DC;AACF;;AACDR,MAAAA,WAAW;AACZ,KAnED,MAoEK;AACHP,MAAAA,YAAY,GAAG,EAAf;AACD;AAEF;;AACD,QAAM4D,SAAS,GAAInD,CAAD,IAAO;AACvB,UAAMoD,GAAG,GAAGpD,CAAC,CAACI,MAAF,CAASf,KAArB;;AACA,QAAI+D,GAAG,IAAI,aAAX,EAAyB;AACvBZ,MAAAA,UAAU,GAAG,EAAb;AACD,KAFD,MAGK;AACHA,MAAAA,UAAU,GAAGY,GAAb;AACD;;AACDtB,IAAAA,UAAU;AAEX,GAVD;;AAWA,WAASuB,OAAT,GAAmB;AACjB,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIrB,CAAT,IAAcrC,IAAd,EAAoB;AAClB0D,MAAAA,QAAQ,CAACpB,IAAT,CACE;AAAQ,QAAA,KAAK,EAAEtC,IAAI,CAACqC,CAAD,CAAJ,CAAQE,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCvC,IAAI,CAACqC,CAAD,CAAJ,CAAQE,IADT,CADF;AAKD;;AACD,WAAOmB,QAAP;AACD;;AACD,SACE,0CACM;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACJ;AAAQ,IAAA,QAAQ,EAAEH,SAAlB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,EAAE,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEKE,OAAO,EAFZ,CADI,EAMG9D,YANH,CADN,CADF;AAcD;;AAED,eAAeC,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Redirect, Link} from \"react-router-dom\";\nimport {variables} from \"../urls.js\";\n\nfunction useForceUpdate(){\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nlet renderedFeed = \"\";\n\nfunction Feed(props) {\n  const [feed, setFeed] = useState(null);\n  const [tags, setTags] = useState(null);\n  const forceUpdate = useForceUpdate();\n\n  const addNewComment = async (e, data) => {\n    e.preventDefault();\n    const commentContent = e.target[0].value;\n    const bookId = e.target.id\n\n    const url = variables.serverUrl + variables.postCommentEndpoint;\n    const token = props.getToken();\n    const res = axios.post(url, {\n        content: commentContent,\n        book_id: bookId,\n        user_id: 1,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false });\n\n    e.target.reset();\n    fetchFeed();\n  }\n\n  const likeBook = async () => {\n  }\n  const fetchTags = async () => {\n    const url = variables.serverUrl + variables.fetchTagsEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {user_id: '1'}});\n    setTags(response.data);\n  }\n  const fetchFeed = async () => {\n    const url = variables.serverUrl + variables.fetchFeedEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {user_id: '1'}});\n    setFeed(response.data);\n  }\n\n\n  useEffect(() => {\n    fetchFeed();\n    fetchTags();\n\t}, []);\n\n  useEffect(() => {\n    renderFeed();\n\t}, [feed]);\n\n  function getTagCards(tags) {\n    var t = [];\n    for (var i in tags) {\n      t.push(\n        <div className=\"pill\">\n          {tags[i].name}\n        </div>\n      );\n    }\n    return t;\n  }\n\n  function bookmatchesTag(book) {\n    console.log(tag_filter);\n    if (tag_filter == \"\")\n      return true;\n    for(var i in book.tags)\n    {\n      if (tag_filter == book.tags[i].name)\n        return true;\n    }\n    return false;\n  }\n  function renderFeed() {\n    if (feed) {\n      renderedFeed = [];\n      for(var i = 0; i < feed.length; i++) {\n        if (bookmatchesTag(feed[i])) {\n        renderedFeed.push(\n          <div className=\"feed-card \">\n          <div className=\"book row\">\n            <div className=\"header\">\n             <img className=\"profile-picture\" src={require('../static/pf.png')} alt=\"profile picture\"/> \n              <div className=\"username\">\n                {feed[i].user.first_name}\n              </div>\n              <div className=\"timestamp\">\n                {feed[i].time_ago}\n              </div>\n            </div>\n            <div className=\"column\">\n                <div>\n                    <Link className=\"title\" to={\"/book/\" + feed[i].id + \"/notes\"} >\n                      <h4 id={feed[i].id}>\n                          {feed[i].title}\n                  \n                      </h4>\n                    </Link> \n                </div>\n                <div className=\"description\">\n                  {feed[i].description}\n                </div>\n              \n            </div>\n            <div className=\"column-right\">\n              <div className=\"feed-card-tags\">\n                  {getTagCards(feed[i].tags)}\n              </div>\n            </div>\n          \n          </div>\n        <div className=\"comments\">\n                {feed[i].comments.map( \n                  comment => (\n                    <div className=\"comment\">\n                    <div className=\"header\">\n                         <img className=\"profile-picture\" src={require('../static/pf.png')} alt=\"profile picture\"/> \n                        <div className=\"username\">{comment.user.first_name}</div>\n                        <div className=\"timestamp\">{comment.time_ago}</div>\n                    </div>\n                      <div className=\"\">{comment.content}</div>\n                    </div>\n                  )\n                )}\n          </div>\n          <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"column-sm new-comment\">\n                <form onSubmit={addNewComment} id={feed[i].id}>\n                  <input placeholder=\"Add new comment\" />\n                </form>\n              </div>\n          \n          </div>\n          \n          </div>\n          </div>\n        );\n        }\n      }\n      forceUpdate();\n    }\n    else {\n      renderedFeed = \"\";\n    }\n\n  }\n  const sortByTag = (e) => {\n    const tag = e.target.value;\n    if (tag == \"Sort by tag\"){\n      tag_filter = \"\"\n    }\n    else {\n      tag_filter = tag;\n    }\n    renderFeed();\n\n  }\n  function getTags() {\n    var tagnames = []\n    for (var i in tags) {\n      tagnames.push(\n        <option value={tags[i].name}>\n        {tags[i].name}\n        </option>\n      );\n    }\n    return tagnames\n  }\n  return (\n    <>\n          <div className=\"feed\">\n      <select onChange={sortByTag} name=\"pets\" id=\"pet-select\">\n        <option value=\"\">Sort by tag</option>\n          {getTags()}\n        </select>\n\n            {renderedFeed}\n          </div>\n    </>\n\n  )\n\n}\n\nexport default Feed;\n"]},"metadata":{},"sourceType":"module"}