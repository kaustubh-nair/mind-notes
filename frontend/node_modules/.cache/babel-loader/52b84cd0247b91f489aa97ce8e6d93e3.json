{"ast":null,"code":"import _defineProperty from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/book.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport { variables } from \"../urls.js\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\"\n};\n\nconst Book = ({\n  getToken\n}) => {\n  const _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastPoint = _useState4[0],\n        setLastPoint = _useState4[1];\n\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notes = _useState6[0],\n        setNotes = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        formName = _useState8[0],\n        setFormName = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        formContent = _useState10[0],\n        setFormContent = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        addNoteForm = _useState12[0],\n        setaddNoteForm = _useState12[1];\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        connectionMode = _useState14[0],\n        setConnectionMode = _useState14[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        disConnectionMode = _useState16[0],\n        setDisconnectionMode = _useState16[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        book = _useState18[0],\n        setBook = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        lines = _useState20[0],\n        setLines = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        dragging = _useState22[0],\n        setDragging = _useState22[1];\n\n  const _useState23 = useState(null),\n        _useState24 = _slicedToArray(_useState23, 2),\n        connectionStart = _useState24[0],\n        setConnectionStart = _useState24[1];\n\n  const _useState25 = useState(null),\n        _useState26 = _slicedToArray(_useState25, 2),\n        disconnectionStart = _useState26[0],\n        setDisconnectionStart = _useState26[1];\n\n  const togglePublic = async e => {\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = getToken();\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      is_public: !book.is_public\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n  };\n\n  const saveNote = e => {\n    closeForm();\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = getToken();\n    let name = e.target[1].value;\n    let content = e.target[2].value;\n    let note_id = e.target[1].id;\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: note_id,\n      name: name,\n      content: content,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n  };\n\n  const createArrow = async (startingNote, endingNote) => {\n    const url = variables.serverUrl + variables.postLinesEndpoint;\n    const token = getToken();\n    const res = await axios.post(url, {\n      book_id: bookId,\n      start_id: startingNote,\n      end_id: endingNote\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchLines();\n  };\n\n  const deleteArrow = async (startingNote, endingNote) => {\n    const url = variables.serverUrl + variables.deleteLinesEndpoint;\n    const token = getToken();\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      start_id: startingNote,\n      end_id: endingNote\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchLines();\n  };\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0) {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    } else if (connectionMode == 1) {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    } else if (disConnectionMode == 0) {\n      setDisconnectionStart(noteId);\n      setDisconnectionMode(1);\n    } else if (disConnectionMode == 1) {\n      deleteArrow(disconnectionStart, noteId);\n      setDisconnectionMode(null);\n      setDisconnectionStart(null);\n    } else {\n      addNotePopup(noteId);\n    }\n  };\n\n  function isPublic(is_public) {\n    if (is_public) return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n    setDragging(false);\n    const d = dragging;\n    const noteId = ui.node.id;\n    const i = notes.findIndex(note => note.id == noteId);\n    const newX = notes[i].x + e.clientX - lastPoint.x,\n          newY = notes[i].y + e.clientY - lastPoint.y;\n\n    if (d) {\n      updatePosition(newX, newY, noteId);\n    } else {\n      clickOnNote(e, noteId);\n    } //forceUpdate();\n\n  };\n\n  const onStart = e => {\n    setLastPoint({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onDrag = e => {\n    setDragging(true);\n    forceUpdate();\n  };\n\n  const fetchLines = async () => {\n    const url = variables.serverUrl + variables.fetchLinesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    var l = Object.values(response.data);\n\n    for (var i = 0; i < l.length; i++) {\n      l[i].start = String(l[i].start);\n      l[i].end = String(l[i].end);\n    }\n\n    setLines(l);\n  };\n\n  const fetchBook = async () => {\n    const url = variables.serverUrl + variables.fetchBookEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setBook(response.data);\n  };\n\n  const fetchNotes = async () => {\n    const url = variables.serverUrl + variables.fetchNotesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setNotes(Object.values(response.data));\n  };\n\n  const addNote = async () => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = getToken();\n    const res = await axios.post(url, {\n      book_id: bookId,\n      name: 'lksdjf',\n      content: '',\n      x: 50,\n      y: 50,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    fetchNotes();\n  };\n\n  const updatePosition = (x, y, noteId) => {\n    const url = variables.serverUrl + variables.patchNoteEndpoint;\n    const token = getToken();\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: noteId,\n      x: x,\n      y: y\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n  };\n\n  function openEditDescription() {}\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n  useEffect(() => {\n    fetchNotes();\n    fetchBook();\n    fetchLines();\n  }, []);\n\n  function closeForm() {\n    setaddNoteForm(\"\");\n    forceUpdate();\n  }\n\n  function addNotePopup(noteId) {\n    for (var i in notes) {\n      if (notes[i].id == noteId) {\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n      }\n    }\n\n    setaddNoteForm([React.createElement(\"div\", {\n      className: \"formbk\",\n      id: \"contact_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, \"KLAJSD\"), React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }))]);\n    forceUpdate();\n  }\n\n  return React.createElement(\"div\", {\n    className: \"canvas-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238\n    },\n    __self: this\n  }, addNoteForm, React.createElement(\"h3\", {\n    className: \"note-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, \"Book\"), React.createElement(\"div\", {\n    className: \"note-canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"canvasStyle\",\n    id: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerConatinerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, notes.map((note, i) => React.createElement(Draggable, {\n    onStart: onStart,\n    onStop: onStop,\n    onDrag: onDrag,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: note.id,\n    style: _objectSpread({}, noteStyle, {\n      left: note.x,\n      top: note.y\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }, note.title))), lines.map((line, i) => React.createElement(Xarrow, Object.assign({\n    key: i\n  }, line, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"sidebar column-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addNote,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, \" Add note\"), React.createElement(\"button\", {\n    onClick: connectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, \"Connect two notes\"), React.createElement(\"button\", {\n    onClick: disconnectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, \"Disconnect two notes\"), React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, book.description), React.createElement(\"button\", {\n    onClick: openEditDescription,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, \"Edit description\"), React.createElement(\"div\", {\n    className: \"side-panel-public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }, \"Set public\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: togglePublic,\n    type: \"checkbox\",\n    checked: isPublic(book.is_public),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  })))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  })));\n};\n\nexport default Book;","map":{"version":3,"sources":["/app/frontend/src/components/book.component.js"],"names":["React","useState","useRef","useEffect","useLocation","Redirect","BrowserRouter","Router","Switch","Route","Link","Xarrow","axios","Draggable","useParams","variables","useForceUpdate","value","setState","noteStyle","position","border","borderRadius","textAlign","width","height","Book","getToken","x","y","lastPoint","setLastPoint","bookId","id","forceUpdate","notes","setNotes","formName","setFormName","formContent","setFormContent","addNoteForm","setaddNoteForm","connectionMode","setConnectionMode","disConnectionMode","setDisconnectionMode","book","setBook","lines","setLines","dragging","setDragging","connectionStart","setConnectionStart","disconnectionStart","setDisconnectionStart","togglePublic","e","url","serverUrl","patchBookEndpoint","token","res","patch","book_id","is_public","headers","Authorization","access","crossDomain","saveNote","closeForm","postNoteEndpoint","name","target","content","note_id","parent_id","createArrow","startingNote","endingNote","postLinesEndpoint","post","start_id","end_id","fetchLines","deleteArrow","deleteLinesEndpoint","clickOnNote","noteId","addNotePopup","isPublic","onStop","ui","d","node","i","findIndex","note","newX","clientX","newY","clientY","updatePosition","onStart","onDrag","fetchLinesEndpoint","response","get","params","l","Object","values","data","length","start","String","end","fetchBook","fetchBookEndpoint","fetchNotes","fetchNotesEndpoint","addNote","patchNoteEndpoint","openEditDescription","connectNotes","disconnectNotes","map","left","top","title","line","description"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport {variables} from \"../urls.js\";\n\nfunction useForceUpdate(){\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\",\n}\n\nconst Book = ({getToken}) => {\n  const [lastPoint, setLastPoint] = useState({ x: 0, y: 0 });\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n\n  const [notes, setNotes] = useState([]);\n  const [formName, setFormName] = useState(\"\");\n  const [formContent, setFormContent] = useState(\"\");\n  const [addNoteForm, setaddNoteForm] = useState(\"\");\n  const [connectionMode, setConnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [disConnectionMode, setDisconnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [book, setBook] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const [disconnectionStart, setDisconnectionStart] = useState(null);\n\n  const togglePublic = async (e) => {\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = getToken();\n    const res = await axios.patch(url, {\n        book_id: bookId,\n        is_public: !book.is_public,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n  }\n\n  const saveNote = (e) => {\n    closeForm();\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = getToken();\n    let name = e.target[1].value;\n    let content = e.target[2].value;\n    let note_id = e.target[1].id;\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: note_id,\n      name: name,\n      content: content,\n      parent_id: 1,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n  }\n\n  const createArrow = async (startingNote, endingNote) => {\n        const url = variables.serverUrl + variables.postLinesEndpoint;\n        const token = getToken();\n        const res = await axios.post(url, {\n            book_id: bookId,\n            start_id: startingNote,\n            end_id: endingNote,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n        fetchLines();\n  }\n\n  const deleteArrow = async (startingNote, endingNote) => {\n        const url = variables.serverUrl + variables.deleteLinesEndpoint;\n        const token = getToken();\n        const res = await axios.patch(url, {\n            book_id: bookId,\n            start_id: startingNote,\n            end_id: endingNote,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n      fetchLines();\n  }\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0)\n    {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    }\n    else if(connectionMode == 1)\n    {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    }\n    else if(disConnectionMode==0)\n    {\n      setDisconnectionStart(noteId);\n      setDisconnectionMode(1);\n    }\n    else if(disConnectionMode == 1)\n    {\n      deleteArrow(disconnectionStart, noteId)\n      setDisconnectionMode(null);\n      setDisconnectionStart(null);\n    }\n    else {\n        addNotePopup(noteId)\n    }\n  }\n\n  function isPublic(is_public) {\n    if (is_public) \n      return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n        setDragging(false);\n\n        const d = dragging;\n        const noteId = ui.node.id;\n        const i = notes.findIndex((note) => note.id == noteId);\n        const newX = notes[i].x + e.clientX - lastPoint.x,\n            newY = notes[i].y + e.clientY - lastPoint.y;\n        if (d) {\n            updatePosition(newX, newY, noteId);\n        }\n        else {\n            clickOnNote(e, noteId);\n        }\n        //forceUpdate();\n    }\n\n    const onStart = (e) => {\n        setLastPoint({ x: e.clientX, y: e.clientY })\n    }\n\n    const onDrag = (e) => {\n        setDragging(true);\n        forceUpdate();\n    }\n\n    const fetchLines = async () => {\n        const url = variables.serverUrl + variables.fetchLinesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        var l = Object.values(response.data)\n        for (var i = 0; i < l.length; i++) {\n            l[i].start = String(l[i].start);\n            l[i].end = String(l[i].end);\n        }\n        setLines(l);\n    }\n\n    const fetchBook = async () => {\n        const url = variables.serverUrl + variables.fetchBookEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setBook(response.data);\n    }\n\n    const fetchNotes = async () => {\n        const url = variables.serverUrl + variables.fetchNotesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setNotes(Object.values(response.data));\n    }\n\n    const addNote = async () => {\n        const url = variables.serverUrl + variables.postNoteEndpoint;\n        const token = getToken();\n        const res = await axios.post(url, {\n            book_id: bookId,\n            name: 'lksdjf',\n            content: '',\n            x: 50,\n            y: 50,\n            parent_id: 1,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        fetchNotes();\n    }\n\n    const updatePosition = (x, y, noteId) => {\n        const url = variables.serverUrl + variables.patchNoteEndpoint;\n        const token = getToken();\n        const res = axios.patch(url, {\n            book_id: bookId,\n            note_id: noteId,\n            x: x,\n            y: y,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n    }\n\n  function openEditDescription() {\n\n  }\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n\n    useEffect(() => {\n      fetchNotes();\n      fetchBook();\n      fetchLines();\n\t}, []);\n\n  function closeForm() {\n    setaddNoteForm(\"\");\n    forceUpdate();\n  }\n\n  function addNotePopup(noteId) {\n    for (var i in notes) {\n      if (notes[i].id == noteId){\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n      }\n    }\n    setaddNoteForm( [\n          <div className=\"formbk\" id=\"contact_form\">\n      <h2>KLAJSD</h2>\n              <div className=\"panel-body\"></div>\n            </div>\n    ]);\n    forceUpdate();\n  }\n  return (\n    <div className=\"canvas-wrapper\">\n      <React.Fragment>\n          {addNoteForm}\n        <h3 className=\"note-heading\">Book</h3>\n        <div className=\"note-canvas\">\n          <div className=\"row\">\n            <div className=\"column\">\n              <div className=\"canvasStyle\" id=\"canvas\" >\n                <div className=\"noteContainerStyle\" id=\"noteContainerConatinerStyle\">\n                  <div className=\"noteContainerStyle\" id=\"noteContainerStyle\">\n                    {notes.map((note, i) => (\n                      <Draggable onStart={onStart} onStop={onStop} onDrag={onDrag} key={i}>\n                        <div\n                          id={note.id}\n                          style={{ ...noteStyle, left: note.x, top: note.y }}\n                        >\n                          {note.title}\n                        </div>\n                      </Draggable>\n                    ))}\n                    {lines.map((line, i) => (\n                      <Xarrow key={i} {...line} />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          <div className=\"sidebar column-right\">\n                <button onClick={addNote} className=\"btn btn-dark\"> Add note</button>\n                <button onClick={connectNotes} className=\"btn btn-dark\">Connect two notes</button>\n                <button onClick={disconnectNotes} className=\"btn btn-dark\">Disconnect two notes</button>\n                <h5 className=\"desc\" >Description:</h5>\n                <p>{book.description}</p>\n                <button onClick={openEditDescription} className=\"btn btn-dark\">Edit description</button>\n                <div className=\"side-panel-public\">\n                    <h5 className=\"desc\" >Set public</h5>\n                    <label className=\"switch\">\n                      <input onChange={togglePublic} type=\"checkbox\" checked={isPublic(book.is_public)}></input>\n                      <span className=\"slider round\"></span>\n                    </label>\n                  \n                </div>\n          </div>\n          </div>\n        </div>\n        <br />\n      </React.Fragment>\n    \n    </div>\n  );\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}