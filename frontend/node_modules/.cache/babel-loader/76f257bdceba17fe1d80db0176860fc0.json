{"ast":null,"code":"import _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/login.component.js\";\nimport React, { useState } from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { variables } from \"../urls.js\";\n\nasync function loginUser(credentials) {\n  return fetch(variables.serverUrl + variables.loginEndpoint, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login(props, {\n  setToken\n}) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await loginUser({\n      username,\n      password\n    });\n\n    if ('access' in response) {\n      setToken({\n        'access': response['access'],\n        'refresh': response['refresh']\n      });\n      window.location.reload(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Log in\"), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    onChange: e => setUserName(e.target.value),\n    type: \"username\",\n    className: \"form-control\",\n    placeholder: \"Enter username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    onChange: e => setPassword(e.target.value),\n    type: \"password\",\n    className: \"form-control\",\n    placeholder: \"Enter password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-dark btn-lg btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"p\", {\n    className: \"forgot-password text-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Forgot \", React.createElement(\"a\", {\n    href: \"#\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"password?\"))));\n}","map":{"version":3,"sources":["/app/frontend/src/components/login.component.js"],"names":["React","useState","Redirect","variables","loginUser","credentials","fetch","serverUrl","loginEndpoint","method","headers","body","JSON","stringify","then","data","json","Login","props","setToken","username","setUserName","password","setPassword","handleSubmit","e","preventDefault","response","window","location","reload","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAwB,kBAAxB;AACA,SAAQC,SAAR,QAAwB,YAAxB;;AAEA,eAAeC,SAAf,CAAyBC,WAAzB,EAAsC;AACrC,SAAOC,KAAK,CAACH,SAAS,CAACI,SAAV,GAAsBJ,SAAS,CAACK,aAAjC,EAAgD;AAC1DC,IAAAA,MAAM,EAAE,MADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiD;AAK1DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,WAAf;AALoD,GAAhD,CAAL,CAOJS,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,CAAP;AAQA;;AAID,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAACC,EAAAA;AAAD,CAAtB,EAAkC;AAAA,oBACblB,QAAQ,EADK;AAAA;AAAA,QACtCmB,QADsC;AAAA,QAC5BC,WAD4B;;AAAA,qBAEbpB,QAAQ,EAFK;AAAA;AAAA,QAEtCqB,QAFsC;AAAA,QAE5BC,WAF4B;;AAI7C,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMvB,SAAS,CAAC;AAC/BgB,MAAAA,QAD+B;AAE/BE,MAAAA;AAF+B,KAAD,CAAhC;;AAIA,QAAI,YAAYK,QAAhB,EACA;AACIR,MAAAA,QAAQ,CAAC;AAAC,kBAAUQ,QAAQ,CAAC,QAAD,CAAnB;AAA+B,mBAAWA,QAAQ,CAAC,SAAD;AAAlD,OAAD,CAAR;AACAC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB;AACH;AACF,GAXH;;AAYI,SACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,QAAQ,EAAEN,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAII;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,QAAQ,EAAEC,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACM,MAAF,CAASC,KAAV,CAAjC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,SAAS,EAAC,cAA7E;AAA4F,IAAA,WAAW,EAAC,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAJJ,EASI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,QAAQ,EAAEP,CAAC,IAAIF,WAAW,CAACE,CAAC,CAACM,MAAF,CAASC,KAAV,CAAjC;AAAmD,IAAA,IAAI,EAAC,UAAxD;AAAmE,IAAA,SAAS,EAAC,cAA7E;AAA4F,IAAA,WAAW,EAAC,gBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATJ,EAcI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,+BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdJ,EAeI;AAAG,IAAA,SAAS,EAAC,4BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACW;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADX,CAfJ,CADA,CADJ;AAuBP","sourcesContent":["import React, { useState } from 'react';\nimport { Redirect} from \"react-router-dom\";\nimport {variables} from \"../urls.js\";\n\nasync function loginUser(credentials) {\n return fetch(variables.serverUrl + variables.loginEndpoint, {\n   method: 'POST',\n   headers: {\n     'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(credentials)\n })\n   .then(data => data.json())\n}\n\n\n\nexport default function Login(props, {setToken}) {\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const response = await loginUser({\n          username,\n          password\n        });\n        if ('access' in response)\n        {\n            setToken({'access': response['access'], 'refresh': response['refresh']});\n            window.location.reload(false);\n        }\n      }\n        return (\n            <div className=\"inner\">\n            <form onSubmit={handleSubmit}>\n\n                <h3>Log in</h3>\n\n                <div className=\"form-group\">\n                    <label>Username</label>\n                    <input onChange={e => setUserName(e.target.value)} type=\"username\" className=\"form-control\" placeholder=\"Enter username\" />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Password</label>\n                    <input onChange={e => setPassword(e.target.value)} type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-dark btn-lg btn-block\">Sign in</button>\n                <p className=\"forgot-password text-right\">\n                    Forgot <a href=\"#\">password?</a>\n                </p>\n            </form>\n            </div>\n        );\n}\n"]},"metadata":{},"sourceType":"module"}