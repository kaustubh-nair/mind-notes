{"ast":null,"code":"import _defineProperty from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/book.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport { variables } from \"../urls.js\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\"\n};\n\nconst Book = ({\n  getToken\n}) => {\n  const _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastPoint = _useState4[0],\n        setLastPoint = _useState4[1];\n\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        notes = _useState6[0],\n        setNotes = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        connectionMode = _useState8[0],\n        setConnectionMode = _useState8[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState9 = useState(null),\n        _useState10 = _slicedToArray(_useState9, 2),\n        disConnectionMode = _useState10[0],\n        setDisconnectionMode = _useState10[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        book = _useState12[0],\n        setBook = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        lines = _useState14[0],\n        setLines = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        dragging = _useState16[0],\n        setDragging = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        connectionStart = _useState18[0],\n        setConnectionStart = _useState18[1];\n\n  const createArrow = (startingNote, endingNote) => {\n    const url = variables.serverUrl + variables.postLinesEndpoint;\n    const token = getToken(); // TODO: add wait\n\n    const res = axios.post(url, {\n      book_id: bookId,\n      start_id: startingNote,\n      end_id: endingNote\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchLines();\n  };\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0) {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    } else if (connectionMode == 1) {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    } else if (disConnectionMode == 0) {} else {\n      prompt('Please enter your name', 'Poppy');\n    }\n  };\n\n  function isPublic(is_public) {\n    if (is_public) return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n    setDragging(false);\n    const d = dragging;\n    const noteId = ui.node.id;\n    const i = notes.findIndex(note => note.id == noteId);\n    const newX = notes[i].x + e.clientX - lastPoint.x,\n          newY = notes[i].y + e.clientY - lastPoint.y;\n\n    if (d) {\n      updatePosition(newX, newY, noteId);\n    } else {\n      clickOnNote(e, noteId);\n    } //forceUpdate();\n\n  };\n\n  const onStart = e => {\n    setLastPoint({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onDrag = e => {\n    setDragging(true);\n    forceUpdate();\n  };\n\n  const fetchLines = async () => {\n    const url = variables.serverUrl + variables.fetchLinesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    var l = Object.values(response.data);\n\n    for (var i = 0; i < l.length; i++) {\n      l[i].start = String(l[i].start);\n      l[i].end = String(l[i].end);\n    }\n\n    console.log(l);\n    setLines(l);\n  };\n\n  const fetchBook = async () => {\n    const url = variables.serverUrl + variables.fetchBookEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setBook(response.data);\n    console.log(response.data);\n  };\n\n  const fetchNotes = async () => {\n    const url = variables.serverUrl + variables.fetchNotesEndpoint;\n    const token = getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setNotes(Object.values(response.data));\n  };\n\n  const addNote = () => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = getToken(); // TODO: add wait\n\n    const res = axios.post(url, {\n      book_id: bookId,\n      name: 'lksdjf',\n      content: '',\n      x: 50,\n      y: 50,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    fetchNotes();\n  };\n\n  const updatePosition = (x, y, noteId) => {\n    const url = variables.serverUrl + variables.patchNoteEndpoint;\n    const token = getToken();\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: noteId,\n      x: x,\n      y: y\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n  };\n\n  function openEditDescription() {}\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n  useEffect(() => {\n    fetchNotes();\n    fetchBook();\n    fetchLines();\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"canvas-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"note-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175\n    },\n    __self: this\n  }, \"Book\"), React.createElement(\"div\", {\n    className: \"note-canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"canvasStyle\",\n    id: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerConatinerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, notes.map((note, i) => React.createElement(Draggable, {\n    onStart: onStart,\n    onStop: onStop,\n    onDrag: onDrag,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: note.id,\n    style: _objectSpread({}, noteStyle, {\n      left: note.x,\n      top: note.y\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, note.title))), lines.map((line, i) => React.createElement(Xarrow, Object.assign({\n    key: i\n  }, line, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"sidebar column-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addNote,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, \" Add note\"), React.createElement(\"button\", {\n    onClick: connectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Connect two notes\"), React.createElement(\"button\", {\n    onClick: disconnectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \"Disconnect two notes\"), React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, book.description), React.createElement(\"button\", {\n    onClick: openEditDescription,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, \"Edit description\"), React.createElement(\"div\", {\n    className: \"side-panel-public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, \"Set public\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isPublic(book.is_public),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  })))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })));\n};\n\nexport default Book;","map":{"version":3,"sources":["/app/frontend/src/components/book.component.js"],"names":["React","useState","useRef","useEffect","useLocation","Redirect","BrowserRouter","Router","Switch","Route","Link","Xarrow","axios","Draggable","useParams","variables","useForceUpdate","value","setState","noteStyle","position","border","borderRadius","textAlign","width","height","Book","getToken","x","y","lastPoint","setLastPoint","bookId","id","forceUpdate","notes","setNotes","connectionMode","setConnectionMode","disConnectionMode","setDisconnectionMode","book","setBook","lines","setLines","dragging","setDragging","connectionStart","setConnectionStart","createArrow","startingNote","endingNote","url","serverUrl","postLinesEndpoint","token","res","post","book_id","start_id","end_id","headers","Authorization","access","crossDomain","fetchLines","clickOnNote","e","noteId","prompt","isPublic","is_public","onStop","ui","d","node","i","findIndex","note","newX","clientX","newY","clientY","updatePosition","onStart","onDrag","fetchLinesEndpoint","response","get","params","l","Object","values","data","length","start","String","end","console","log","fetchBook","fetchBookEndpoint","fetchNotes","fetchNotesEndpoint","addNote","postNoteEndpoint","name","content","parent_id","patchNoteEndpoint","patch","note_id","openEditDescription","connectNotes","disconnectNotes","map","left","top","title","line","description"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport {variables} from \"../urls.js\";\n\nfunction useForceUpdate(){\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\",\n}\n\nconst Book = ({getToken}) => {\n  const [lastPoint, setLastPoint] = useState({ x: 0, y: 0 });\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n\n  const [notes, setNotes] = useState([]);\n  const [connectionMode, setConnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [disConnectionMode, setDisconnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [book, setBook] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n\n  const createArrow = (startingNote, endingNote) => {\n        const url = variables.serverUrl + variables.postLinesEndpoint;\n        const token = getToken();\n      // TODO: add wait\n        const res = axios.post(url, {\n            book_id: bookId,\n            start_id: startingNote,\n            end_id: endingNote,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n        fetchLines();\n  }\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0)\n    {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    }\n    else if(connectionMode == 1)\n    {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    }\n    else if(disConnectionMode==0)\n    {\n\n    }\n    else {\n      prompt('Please enter your name','Poppy');\n    }\n  }\n\n  function isPublic(is_public) {\n    if (is_public) \n      return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n        setDragging(false);\n\n        const d = dragging;\n        const noteId = ui.node.id;\n        const i = notes.findIndex((note) => note.id == noteId);\n        const newX = notes[i].x + e.clientX - lastPoint.x,\n            newY = notes[i].y + e.clientY - lastPoint.y;\n        if (d) {\n            updatePosition(newX, newY, noteId);\n        }\n        else {\n            clickOnNote(e, noteId);\n        }\n        //forceUpdate();\n    }\n\n    const onStart = (e) => {\n        setLastPoint({ x: e.clientX, y: e.clientY })\n    }\n\n    const onDrag = (e) => {\n        setDragging(true);\n        forceUpdate();\n    }\n\n    const fetchLines = async () => {\n        const url = variables.serverUrl + variables.fetchLinesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        var l = Object.values(response.data)\n        for (var i = 0; i < l.length; i++) {\n            l[i].start = String(l[i].start);\n            l[i].end = String(l[i].end);\n        }\n      console.log(l);\n        setLines(l);\n    }\n\n    const fetchBook = async () => {\n        const url = variables.serverUrl + variables.fetchBookEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setBook(response.data);\n        console.log(response.data);\n    }\n\n    const fetchNotes = async () => {\n        const url = variables.serverUrl + variables.fetchNotesEndpoint;\n        const token = getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setNotes(Object.values(response.data));\n    }\n\n    const addNote = () => {\n        const url = variables.serverUrl + variables.postNoteEndpoint;\n        const token = getToken();\n      // TODO: add wait\n        const res = axios.post(url, {\n            book_id: bookId,\n            name: 'lksdjf',\n            content: '',\n            x: 50,\n            y: 50,\n            parent_id: 1,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        fetchNotes();\n    }\n\n    const updatePosition = (x, y, noteId) => {\n        const url = variables.serverUrl + variables.patchNoteEndpoint;\n        const token = getToken();\n        const res = axios.patch(url, {\n            book_id: bookId,\n            note_id: noteId,\n            x: x,\n            y: y,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n    }\n\n  function openEditDescription() {\n\n  }\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n\n    useEffect(() => {\n      fetchNotes();\n      fetchBook();\n      fetchLines();\n\t}, []);\n\n  return (\n    <div className=\"canvas-wrapper\">\n      <React.Fragment>\n        <h3 className=\"note-heading\">Book</h3>\n        <div className=\"note-canvas\">\n          <div className=\"row\">\n            <div className=\"column\">\n              <div className=\"canvasStyle\" id=\"canvas\" >\n                <div className=\"noteContainerStyle\" id=\"noteContainerConatinerStyle\">\n                  <div className=\"noteContainerStyle\" id=\"noteContainerStyle\">\n                    {notes.map((note, i) => (\n                      <Draggable onStart={onStart} onStop={onStop} onDrag={onDrag} key={i}>\n                        <div\n                          id={note.id}\n                          style={{ ...noteStyle, left: note.x, top: note.y }}\n                        >\n                          {note.title}\n                        </div>\n                      </Draggable>\n                    ))}\n                    {lines.map((line, i) => (\n                      <Xarrow key={i} {...line} />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          <div className=\"sidebar column-right\">\n                <button onClick={addNote} className=\"btn btn-dark\"> Add note</button>\n                <button onClick={connectNotes} className=\"btn btn-dark\">Connect two notes</button>\n                <button onClick={disconnectNotes} className=\"btn btn-dark\">Disconnect two notes</button>\n                <h5 className=\"desc\" >Description:</h5>\n                <p>{book.description}</p>\n                <button onClick={openEditDescription} className=\"btn btn-dark\">Edit description</button>\n                <div className=\"side-panel-public\">\n                    <h5 className=\"desc\" >Set public</h5>\n                    <label className=\"switch\">\n                      <input type=\"checkbox\" checked={isPublic(book.is_public)}></input>\n                      <span className=\"slider round\"></span>\n                    </label>\n                </div>\n          </div>\n          </div>\n        </div>\n        <br />\n      </React.Fragment>\n    \n    </div>\n  );\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}