{"ast":null,"code":"import _defineProperty from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/app/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/app/frontend/src/components/book.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from 'react-markdown';\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport { variables } from \"../urls.js\";\n\nfunction useForceUpdate() {\n  let _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setState = _useState2[1];\n\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\"\n};\n\nconst Book = props => {\n  const _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        lastPoint = _useState4[0],\n        setLastPoint = _useState4[1];\n\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        message = _useState6[0],\n        setMessage = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        notes = _useState8[0],\n        setNotes = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        formName = _useState10[0],\n        setFormName = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        formContent = _useState12[0],\n        setFormContent = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        addNoteForm = _useState14[0],\n        setaddNoteForm = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        connectionMode = _useState16[0],\n        setConnectionMode = _useState16[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        disConnectionMode = _useState18[0],\n        setDisconnectionMode = _useState18[1]; // 0 for selecting start, 1 for selecting end, null for opening note.\n\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        book = _useState20[0],\n        setBook = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        lines = _useState22[0],\n        setLines = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        dragging = _useState24[0],\n        setDragging = _useState24[1];\n\n  const _useState25 = useState(null),\n        _useState26 = _slicedToArray(_useState25, 2),\n        connectionStart = _useState26[0],\n        setConnectionStart = _useState26[1];\n\n  const _useState27 = useState(null),\n        _useState28 = _slicedToArray(_useState27, 2),\n        disconnectionStart = _useState28[0],\n        setDisconnectionStart = _useState28[1];\n\n  const togglePublic = async e => {\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = props.getToken();\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      is_public: !book.is_public\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    setMessage(React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Changed book visibility successfully\"));\n  };\n\n  const saveNote = async e => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = props.getToken();\n    let name = e.target[1].value;\n    let content = e.target[2].value;\n    let note_id = e.target[1].id.substring(4);\n    closeForm();\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      note_id: note_id,\n      name: name,\n      content: content,\n      coords_update: false,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    var n = notes;\n\n    for (var i in n) {\n      if (n[i].id == note_id) {\n        n[i].name = name;\n        n[i].content = content;\n      }\n    }\n\n    forceUpdate();\n  };\n\n  const createArrow = async (startingNote, endingNote) => {\n    const url = variables.serverUrl + variables.postLinesEndpoint;\n    const token = props.getToken();\n    const res = await axios.post(url, {\n      book_id: bookId,\n      start_id: startingNote,\n      end_id: endingNote\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchLines();\n  };\n\n  const deleteArrow = async (startingNote, endingNote) => {\n    const url = variables.serverUrl + variables.deleteLinesEndpoint;\n    const token = props.getToken();\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      start_id: startingNote,\n      end_id: endingNote\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchLines();\n  };\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0) {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    } else if (connectionMode == 1) {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    } else if (disConnectionMode == 0) {\n      setDisconnectionStart(noteId);\n      setDisconnectionMode(1);\n    } else if (disConnectionMode == 1) {\n      deleteArrow(disconnectionStart, noteId);\n      setDisconnectionMode(null);\n      setDisconnectionStart(null);\n    } else {\n      addNotePopup(noteId);\n    }\n  };\n\n  function isPublic(is_public) {\n    if (is_public) return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n    setDragging(false);\n    const d = dragging;\n    const noteId = ui.node.id;\n    const i = notes.findIndex(note => note.id == noteId);\n    const newX = notes[i].x + e.clientX - lastPoint.x,\n          newY = notes[i].y + e.clientY - lastPoint.y;\n\n    if (d) {\n      updatePosition(newX, newY, noteId);\n    } else {\n      clickOnNote(e, noteId);\n    }\n  };\n\n  const onStart = e => {\n    setLastPoint({\n      x: e.clientX,\n      y: e.clientY\n    });\n  };\n\n  const onDrag = e => {\n    setDragging(true);\n    forceUpdate();\n  };\n\n  const fetchLines = async () => {\n    toastr.info('Hi! I am info message.');\n    const url = variables.serverUrl + variables.fetchLinesEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    var l = Object.values(response.data);\n\n    for (var i = 0; i < l.length; i++) {\n      l[i].start = String(l[i].start);\n      l[i].end = String(l[i].end);\n    }\n\n    setLines(l);\n  };\n\n  const fetchBook = async () => {\n    const url = variables.serverUrl + variables.fetchBookEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setBook(response.data);\n  };\n\n  const fetchNotes = async () => {\n    const url = variables.serverUrl + variables.fetchNotesEndpoint;\n    const token = props.getToken();\n    const response = await axios.get(url, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    setNotes(Object.values(response.data));\n  };\n\n  const addNote = async () => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = props.getToken();\n    const res = await axios.post(url, {\n      book_id: bookId,\n      name: '',\n      content: '',\n      x: 50,\n      y: 50,\n      parent_id: 1\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n    fetchNotes();\n  };\n\n  const updatePosition = (x, y, noteId) => {\n    const url = variables.serverUrl + variables.patchNoteEndpoint;\n    const token = props.getToken();\n    const res = axios.patch(url, {\n      book_id: bookId,\n      note_id: noteId,\n      coords_update: true,\n      x: x,\n      y: y\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false,\n      params: {\n        book_id: bookId\n      }\n    });\n  };\n\n  const editDesc = async e => {\n    e.preventDefault();\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = props.getToken();\n    closeForm();\n    const description = e.target[1].value;\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      description: description\n    }, {\n      headers: {\n        Authorization: 'Bearer ' + token.access\n      },\n      crossDomain: false\n    });\n    fetchBook();\n  };\n\n  function openEditDescription() {\n    setaddNoteForm([React.createElement(\"div\", {\n      className: \"formbk\",\n      id: \"contact_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: editDesc,\n      className: \"form-horizontal\",\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: closeForm,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"content\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: \"10\",\n      className: \"form-control\",\n      id: \"description\",\n      defaultValue: book.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"Save\"))))))]);\n  }\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n  useEffect(() => {\n    fetchNotes();\n    fetchBook();\n    fetchLines();\n  }, []);\n\n  function closeForm() {\n    setaddNoteForm(\"\");\n  }\n\n  function editNote(e) {\n    let noteId = e.target.id.substring(4);\n    closeForm();\n    addEditNotePopup(noteId);\n  }\n\n  function addNotePopup(noteId) {\n    let name = \"\";\n    let content = \"\";\n\n    for (var i in notes) {\n      if (notes[i].id == noteId) {\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n        name = notes[i].name;\n        content = notes[i].content;\n      }\n    }\n\n    setaddNoteForm([React.createElement(\"div\", {\n      className: \"formbk\",\n      id: \"contact_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-horizontal\",\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: closeForm,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, React.createElement(ReactMarkdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, name))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"content\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(ReactMarkdown, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, content))), React.createElement(\"button\", {\n      id: \"NOTE\" + noteId,\n      onClick: editNote,\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Edit\"))))]);\n  }\n\n  function addEditNotePopup(noteId) {\n    let name = \"\";\n    let content = \"\";\n\n    for (var i in notes) {\n      if (notes[i].id == noteId) {\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n        name = notes[i].name;\n        content = notes[i].content;\n      }\n    }\n\n    setaddNoteForm([React.createElement(\"div\", {\n      className: \"formbk\",\n      id: \"contact_form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"panel-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: saveNote,\n      className: \"form-horizontal\",\n      role: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: closeForm,\n      className: \"btn btn-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"X\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      defaultValue: name,\n      id: \"NOTE\" + noteId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"content\",\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Content\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      rows: \"10\",\n      className: \"form-control\",\n      id: \"content\",\n      defaultValue: content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"Save\"))))))]);\n  }\n\n  return React.createElement(\"div\", {\n    className: \"canvas-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  }, React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357\n    },\n    __self: this\n  }, message, addNoteForm, React.createElement(\"h3\", {\n    className: \"note-heading\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    },\n    __self: this\n  }, book.title), React.createElement(\"div\", {\n    className: \"note-canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"canvasStyle\",\n    id: \"canvas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerConatinerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"noteContainerStyle\",\n    id: \"noteContainerStyle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366\n    },\n    __self: this\n  }, notes.map((note, i) => React.createElement(Draggable, {\n    onStart: onStart,\n    onStop: onStop,\n    onDrag: onDrag,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: note.id,\n    style: _objectSpread({}, noteStyle, {\n      left: note.x,\n      top: note.y\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369\n    },\n    __self: this\n  }, note.name))), lines.map((line, i) => React.createElement(Xarrow, Object.assign({\n    key: i\n  }, line, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }))))))), React.createElement(\"div\", {\n    className: \"sidebar column-right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: addNote,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385\n    },\n    __self: this\n  }, \" Add note\"), React.createElement(\"button\", {\n    onClick: connectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386\n    },\n    __self: this\n  }, \"Connect two notes\"), React.createElement(\"button\", {\n    onClick: disconnectNotes,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387\n    },\n    __self: this\n  }, \"Disconnect two notes\"), React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388\n    },\n    __self: this\n  }, \"Description:\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389\n    },\n    __self: this\n  }, book.description), React.createElement(\"button\", {\n    onClick: openEditDescription,\n    className: \"btn btn-dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390\n    },\n    __self: this\n  }, \"Edit description\"), React.createElement(\"div\", {\n    className: \"side-panel-public\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391\n    },\n    __self: this\n  }, React.createElement(\"h5\", {\n    className: \"desc\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392\n    },\n    __self: this\n  }, \"Set public\"), React.createElement(\"label\", {\n    className: \"switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    onChange: togglePublic,\n    type: \"checkbox\",\n    checked: isPublic(book.is_public),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"slider round\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395\n    },\n    __self: this\n  })))))), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402\n    },\n    __self: this\n  })));\n};\n\nexport default Book;","map":{"version":3,"sources":["/app/frontend/src/components/book.component.js"],"names":["React","useState","useRef","useEffect","ReactMarkdown","useLocation","Redirect","BrowserRouter","Router","Switch","Route","Link","Xarrow","axios","toastr","Draggable","useParams","variables","useForceUpdate","value","setState","noteStyle","position","border","borderRadius","textAlign","width","height","Book","props","x","y","lastPoint","setLastPoint","bookId","id","forceUpdate","message","setMessage","notes","setNotes","formName","setFormName","formContent","setFormContent","addNoteForm","setaddNoteForm","connectionMode","setConnectionMode","disConnectionMode","setDisconnectionMode","book","setBook","lines","setLines","dragging","setDragging","connectionStart","setConnectionStart","disconnectionStart","setDisconnectionStart","togglePublic","e","url","serverUrl","patchBookEndpoint","token","getToken","res","patch","book_id","is_public","headers","Authorization","access","crossDomain","saveNote","postNoteEndpoint","name","target","content","note_id","substring","closeForm","coords_update","parent_id","n","i","createArrow","startingNote","endingNote","postLinesEndpoint","post","start_id","end_id","fetchLines","deleteArrow","deleteLinesEndpoint","clickOnNote","noteId","addNotePopup","isPublic","onStop","ui","d","node","findIndex","note","newX","clientX","newY","clientY","updatePosition","onStart","onDrag","info","fetchLinesEndpoint","response","get","params","l","Object","values","data","length","start","String","end","fetchBook","fetchBookEndpoint","fetchNotes","fetchNotesEndpoint","addNote","patchNoteEndpoint","editDesc","preventDefault","description","openEditDescription","connectNotes","disconnectNotes","editNote","addEditNotePopup","title","map","left","top","line"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from 'react-markdown'\nimport { useLocation, Redirect, BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Xarrow from \"react-xarrows\";\nimport axios from 'axios';\nimport toastr from 'toastr';\nimport Draggable from \"react-draggable\";\nimport { useParams } from \"react-router\";\nimport {variables} from \"../urls.js\";\n\nfunction useForceUpdate(){\n  let [value, setState] = useState(true);\n  return () => setState(!value);\n}\n\nconst noteStyle = {\n  position: \"relative\",\n  border: \"1px #999 solid\",\n  borderRadius: \"10px\",\n  textAlign: \"center\",\n  width: \"100px\",\n  height: \"30px\",\n}\n\nconst Book = (props) => {\n  const [lastPoint, setLastPoint] = useState({ x: 0, y: 0 });\n  const bookId = useParams().id;\n  const forceUpdate = useForceUpdate();\n    const [message, setMessage] = useState(\"\");\n\n  const [notes, setNotes] = useState([]);\n  const [formName, setFormName] = useState(\"\");\n  const [formContent, setFormContent] = useState(\"\");\n  const [addNoteForm, setaddNoteForm] = useState(\"\");\n  const [connectionMode, setConnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [disConnectionMode, setDisconnectionMode] = useState(null); // 0 for selecting start, 1 for selecting end, null for opening note.\n  const [book, setBook] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [dragging, setDragging] = useState(false);\n  const [connectionStart, setConnectionStart] = useState(null);\n  const [disconnectionStart, setDisconnectionStart] = useState(null);\n\n  const togglePublic = async (e) => {\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = props.getToken();\n    const res = await axios.patch(url, {\n        book_id: bookId,\n        is_public: !book.is_public,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n    setMessage(\n            <div className=\"alert alert-success\">\n      Changed book visibility successfully\n            </div>\n    );\n  }\n\n  const saveNote = async (e) => {\n    const url = variables.serverUrl + variables.postNoteEndpoint;\n    const token = props.getToken();\n    let name = e.target[1].value;\n    let content = e.target[2].value;\n    let note_id = e.target[1].id.substring(4);\n    closeForm();\n\n    const res = await axios.patch(url, {\n      book_id: bookId,\n      note_id: note_id,\n      name: name,\n      content: content,\n      coords_update: false,\n      parent_id: 1,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n    var n = notes;\n    for(var i in n) {\n      if (n[i].id == note_id)\n      {\n        n[i].name = name;\n        n[i].content = content;\n\n      }\n    }\n    forceUpdate();\n  }\n\n  const createArrow = async (startingNote, endingNote) => {\n        const url = variables.serverUrl + variables.postLinesEndpoint;\n        const token = props.getToken();\n        const res = await axios.post(url, {\n            book_id: bookId,\n            start_id: startingNote,\n            end_id: endingNote,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n        fetchLines();\n  }\n\n  const deleteArrow = async (startingNote, endingNote) => {\n        const url = variables.serverUrl + variables.deleteLinesEndpoint;\n        const token = props.getToken();\n        const res = await axios.patch(url, {\n            book_id: bookId,\n            start_id: startingNote,\n            end_id: endingNote,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n      fetchLines();\n  }\n\n  const clickOnNote = (e, noteId) => {\n    if (connectionMode == 0)\n    {\n      setConnectionStart(noteId);\n      setConnectionMode(1);\n    }\n    else if(connectionMode == 1)\n    {\n      createArrow(connectionStart, noteId);\n      setConnectionMode(null);\n      setConnectionStart(null);\n    }\n    else if(disConnectionMode==0)\n    {\n      setDisconnectionStart(noteId);\n      setDisconnectionMode(1);\n    }\n    else if(disConnectionMode == 1)\n    {\n      deleteArrow(disconnectionStart, noteId)\n      setDisconnectionMode(null);\n      setDisconnectionStart(null);\n    }\n    else {\n        addNotePopup(noteId)\n    }\n  }\n\n  function isPublic(is_public) {\n    if (is_public) \n      return \"checked\";\n  }\n\n  const onStop = (e, ui) => {\n        setDragging(false);\n\n        const d = dragging;\n        const noteId = ui.node.id;\n        const i = notes.findIndex((note) => note.id == noteId);\n        const newX = notes[i].x + e.clientX - lastPoint.x,\n            newY = notes[i].y + e.clientY - lastPoint.y;\n        if (d) {\n            updatePosition(newX, newY, noteId);\n        }\n        else {\n            clickOnNote(e, noteId);\n        }\n    }\n\n    const onStart = (e) => {\n        setLastPoint({ x: e.clientX, y: e.clientY })\n    }\n\n    const onDrag = (e) => {\n        setDragging(true);\n        forceUpdate();\n    }\n\n    const fetchLines = async () => {\n        toastr.info('Hi! I am info message.');\n        const url = variables.serverUrl + variables.fetchLinesEndpoint;\n        const token = props.getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        var l = Object.values(response.data)\n        for (var i = 0; i < l.length; i++) {\n            l[i].start = String(l[i].start);\n            l[i].end = String(l[i].end);\n        }\n        setLines(l);\n    }\n\n    const fetchBook = async () => {\n        const url = variables.serverUrl + variables.fetchBookEndpoint;\n        const token = props.getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setBook(response.data);\n    }\n\n    const fetchNotes = async () => {\n        const url = variables.serverUrl + variables.fetchNotesEndpoint;\n        const token = props.getToken();\n        const response = await axios.get(url, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        setNotes(Object.values(response.data));\n    }\n\n    const addNote = async () => {\n        const url = variables.serverUrl + variables.postNoteEndpoint;\n        const token = props.getToken();\n        const res = await axios.post(url, {\n            book_id: bookId,\n            name: '',\n            content: '',\n            x: 50,\n            y: 50,\n            parent_id: 1,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n        fetchNotes();\n    }\n\n    const updatePosition = (x, y, noteId) => {\n        const url = variables.serverUrl + variables.patchNoteEndpoint;\n        const token = props.getToken();\n        const res = axios.patch(url, {\n            book_id: bookId,\n            note_id: noteId,\n          coords_update: true,\n            x: x,\n            y: y,\n        }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false, params: {book_id: bookId}});\n    }\n\n  const editDesc = async (e) => {\n    e.preventDefault();\n    const url = variables.serverUrl + variables.patchBookEndpoint;\n    const token = props.getToken();\n    closeForm();\n    const description = e.target[1].value;\n    const res = await axios.patch(url, {\n        book_id: bookId,\n        description: description,\n    }, { headers: { Authorization: 'Bearer ' + token.access }, crossDomain: false});\n    fetchBook();\n  }\n\n  function openEditDescription() {\n    setaddNoteForm( [\n          <div className=\"formbk\" id=\"contact_form\">\n              <div className=\"panel-body\">\n                  <form onSubmit={editDesc} className=\"form-horizontal\" role=\"form\">\n                      <button onClick={closeForm} className=\"btn btn-danger\">X</button>\n                      <div className=\"form-group\">\n                          <label for=\"content\" className=\"\">Description</label>\n                          <div className=\"\">\n                              <textarea rows=\"10\" className=\"form-control\" id=\"description\" defaultValue={book.description} />\n                          </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                          <div className=\"\">\n                              <button type=\"submit\" className=\"btn btn-dark\">Save</button>\n                          </div>\n                      </div>\n                  </form>\n              </div>\n            </div>\n    ]);\n\n  }\n\n  function connectNotes() {\n    setConnectionMode(0);\n  }\n\n  function disconnectNotes() {\n    setDisconnectionMode(0);\n  }\n\n\n    useEffect(() => {\n      fetchNotes();\n      fetchBook();\n      fetchLines();\n\t}, []);\n\n  function closeForm() {\n    setaddNoteForm(\"\");\n  }\n\n  function editNote(e) {\n    let noteId = e.target.id.substring(4);\n    closeForm();\n    addEditNotePopup(noteId);\n  }\n\n  function addNotePopup(noteId) {\n    let name = \"\";\n    let content = \"\";\n    for (var i in notes) {\n      if (notes[i].id == noteId){\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n        name = notes[i].name;\n        content = notes[i].content;\n      }\n    }\n    setaddNoteForm( [\n          <div className=\"formbk\" id=\"contact_form\">\n              <div className=\"panel-body\">\n                  <form className=\"form-horizontal\" role=\"form\">\n                      <button onClick={closeForm} className=\"btn btn-danger\">X</button>\n                      <div className=\"form-group\">\n                          <label for=\"title\" className=\"\">Title</label>\n                          <div className=\"\">\n                          <ReactMarkdown>{name}</ReactMarkdown>\n                          </div>\n                      </div>\n                      <div className=\"form-group\">\n                          <label for=\"content\" className=\"\">Content</label>\n                          <div className=\"\">\n                            <ReactMarkdown>{content}</ReactMarkdown>\n                          </div>\n                      </div>\n                      <button id={\"NOTE\"+noteId} onClick={editNote} className=\"btn btn-dark\">Edit</button>\n\n                  </form>\n              </div>\n            </div>\n    ]);\n  }\n  function addEditNotePopup(noteId) {\n    let name = \"\";\n    let content = \"\";\n    for (var i in notes) {\n      if (notes[i].id == noteId){\n        setFormName(notes[i].name);\n        setFormContent(notes[i].content);\n        name = notes[i].name;\n        content = notes[i].content;\n      }\n    }\n    setaddNoteForm( [\n          <div className=\"formbk\" id=\"contact_form\">\n              <div className=\"panel-body\">\n                  <form onSubmit={saveNote} className=\"form-horizontal\" role=\"form\">\n                      <button onClick={closeForm} className=\"btn btn-danger\">X</button>\n                      <div className=\"form-group\">\n                          <label for=\"title\" className=\"\">Title</label>\n                          <div className=\"\">\n                              <input className=\"form-control\" defaultValue={name} id={\"NOTE\"+noteId} />\n                          </div>\n                      </div>\n                      <div className=\"form-group\">\n                          <label for=\"content\" className=\"\">Content</label>\n                          <div className=\"\">\n                              <textarea rows=\"10\" className=\"form-control\" id=\"content\" defaultValue={content} />\n                          </div>\n                      </div>\n\n                      <div className=\"form-group\">\n                          <div className=\"\">\n                              <button type=\"submit\" className=\"btn btn-dark\">Save</button>\n                          </div>\n                      </div>\n                  </form>\n              </div>\n            </div>\n    ]);\n  }\n  return (\n    <div className=\"canvas-wrapper\">\n      <React.Fragment>\n          {message}\n          {addNoteForm}\n        <h3 className=\"note-heading\">{book.title}</h3>\n        <div className=\"note-canvas\">\n          <div className=\"row\">\n            <div className=\"column\">\n              <div className=\"canvasStyle\" id=\"canvas\" >\n                <div className=\"noteContainerStyle\" id=\"noteContainerConatinerStyle\">\n                  <div className=\"noteContainerStyle\" id=\"noteContainerStyle\">\n                    {notes.map((note, i) => (\n                      <Draggable onStart={onStart} onStop={onStop} onDrag={onDrag} key={i}>\n                        <div\n                          id={note.id}\n                          style={{ ...noteStyle, left: note.x, top: note.y }}\n                        >\n                          {note.name}\n                        </div>\n                      </Draggable>\n                    ))}\n                    {lines.map((line, i) => (\n                      <Xarrow key={i} {...line} />\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          <div className=\"sidebar column-right\">\n                <button onClick={addNote} className=\"btn btn-dark\"> Add note</button>\n                <button onClick={connectNotes} className=\"btn btn-dark\">Connect two notes</button>\n                <button onClick={disconnectNotes} className=\"btn btn-dark\">Disconnect two notes</button>\n                <h5 className=\"desc\" >Description:</h5>\n                <p>{book.description}</p>\n                <button onClick={openEditDescription} className=\"btn btn-dark\">Edit description</button>\n                <div className=\"side-panel-public\">\n                    <h5 className=\"desc\" >Set public</h5>\n                    <label className=\"switch\">\n                      <input onChange={togglePublic} type=\"checkbox\" checked={isPublic(book.is_public)}></input>\n                      <span className=\"slider round\"></span>\n                    </label>\n                  \n                </div>\n          </div>\n          </div>\n        </div>\n        <br />\n      </React.Fragment>\n    \n    </div>\n  );\n};\n\nexport default Book;\n"]},"metadata":{},"sourceType":"module"}